Symbol.observable||=Symbol("observable");export const observable=e=>e&&!!(e[Symbol.observable]||e[Symbol.asyncIterator]||e.call&&e.set||e.subscribe||e.then);const e=new FinalizationRegistry((e=>!e?._&&e.call?.()));export default(b,o,t,r,s,l)=>b&&(l=((e,b,o)=>e&&(o=()=>("function"==typeof e?e():e?.unsubscribe?.(),o._=!0,b?.())))((b[Symbol.observable]?.()||b).subscribe?.(o,t,r),r)||b.set&&b.call?.(s,o)||(b.then?.((e=>(!s&&o(e),r?.())),t)||(async e=>{try{for await(e of b){if(s)return;o(e)}r?.()}catch(e){t?.(e)}})())&&(e=>s=1),e.register(b,l),l);